{"version":3,"file":"GroupedList.Custom.Example.js","sourceRoot":"../src/","sources":["components/GroupedList/examples/GroupedList.Custom.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAgD,MAAM,wCAAwC,CAAC;AACnH,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,YAAY,EAAgB,MAAM,wBAAwB,CAAC;AACrF,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAa,MAAM,oCAAoC,CAAC;AAEzF,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;AACzB,IAAM,qBAAqB,GAAc;IACvC,QAAQ,EAAE,GAAG;IACb,SAAS,EAAE,EAAE;IACb,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;CAChB,CAAC;AACF,IAAM,UAAU,GAAG,cAAc,CAAC;IAChC,MAAM,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IACnD,MAAM,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;IAClD,IAAI,EAAE;QACJ,OAAO,EAAE,cAAc;QACvB,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,CAAC;QACV,SAAS,EAAE,YAAY;QACvB,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,MAAM;QAClB,eAAe,EAAE,aAAa;QAC9B,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,EAAE;KAChB;CACF,CAAC,CAAC;AAEH,IAAM,cAAc,GAAG,UAAC,KAAwB;IAC9C,IAAM,cAAc,GAAG;QACrB,KAAK,CAAC,gBAAiB,CAAC,KAAK,CAAC,KAAM,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;QACF,KAAK,CAAC,KAAM,CAAC,IAAI;;QACtC,oBAAC,IAAI,IAAC,OAAO,EAAE,cAAc,IAAG,KAAK,CAAC,KAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAQ;YAC5F,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,YAAY,GAAG,UAAC,YAAoB,EAAE,IAAkB,EAAE,SAAiB;IAC/E,OAAO,CACL,6BAAK,IAAI,EAAC,KAAK,0BAAuB,SAAS;QAC7C,8BAAM,IAAI,EAAC,MAAM,EAAC,SAAS,EAAE,UAAU,CAAC,IAAI,IACzC,IAAI,CAAC,IAAI,CACL,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,cAAc,GAAG,UAAC,KAAwB;IAC9C,OAAO,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;QAA+B,KAAK,CAAC,KAAM,CAAC,IAAI,CAAO,CAAC;AAClG,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG;IACvB,cAAc,gBAAA;IACd,cAAc,gBAAA;CACf,CAAC;AACF,IAAM,KAAK,GAAmB,eAAe,CAAC,EAAE,CAAC,CAAC;AAClD,IAAM,MAAM,GAAa,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAElD,MAAM,CAAC,IAAM,wBAAwB,GAA4B,cAAM,OAAA,CACrE,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,GAAI,CACxG,EAFsE,CAEtE,CAAC","sourcesContent":["import * as React from 'react';\nimport { GroupedList, IGroup, IGroupHeaderProps, IGroupFooterProps } from 'office-ui-fabric-react/lib/GroupedList';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { createListItems, createGroups, IExampleItem } from '@uifabric/example-data';\nimport { getTheme, mergeStyleSets, IRawStyle } from 'office-ui-fabric-react/lib/Styling';\n\nconst theme = getTheme();\nconst headerAndFooterStyles: IRawStyle = {\n  minWidth: 300,\n  minHeight: 40,\n  lineHeight: 40,\n  paddingLeft: 16,\n};\nconst classNames = mergeStyleSets({\n  header: [headerAndFooterStyles, theme.fonts.xLarge],\n  footer: [headerAndFooterStyles, theme.fonts.large],\n  name: {\n    display: 'inline-block',\n    overflow: 'hidden',\n    height: 24,\n    cursor: 'default',\n    padding: 8,\n    boxSizing: 'border-box',\n    verticalAlign: 'top',\n    background: 'none',\n    backgroundColor: 'transparent',\n    border: 'none',\n    paddingLeft: 32,\n  },\n});\n\nconst onRenderHeader = (props: IGroupHeaderProps): JSX.Element => {\n  const toggleCollapse = (): void => {\n    props.onToggleCollapse!(props.group!);\n  };\n  return (\n    <div className={classNames.header}>\n      This is a custom header for {props.group!.name}\n      &nbsp; (<Link onClick={toggleCollapse}>{props.group!.isCollapsed ? 'Expand' : 'Collapse'}</Link>)\n    </div>\n  );\n};\n\nconst onRenderCell = (nestingDepth: number, item: IExampleItem, itemIndex: number): JSX.Element => {\n  return (\n    <div role=\"row\" data-selection-index={itemIndex}>\n      <span role=\"cell\" className={classNames.name}>\n        {item.name}\n      </span>\n    </div>\n  );\n};\n\nconst onRenderFooter = (props: IGroupFooterProps): JSX.Element => {\n  return <div className={classNames.footer}>This is a custom footer for {props.group!.name}</div>;\n};\n\nconst groupedListProps = {\n  onRenderHeader,\n  onRenderFooter,\n};\nconst items: IExampleItem[] = createListItems(20);\nconst groups: IGroup[] = createGroups(4, 0, 0, 5);\n\nexport const GroupedListCustomExample: React.FunctionComponent = () => (\n  <GroupedList items={items} onRenderCell={onRenderCell} groupProps={groupedListProps} groups={groups} />\n);\n"]}