{"version":3,"file":"KeytipData.js","sourceRoot":"../src/","sources":["components/KeytipData/KeytipData.tsx"],"names":[],"mappings":";AAGA,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD;;;GAGG;AACH,MAAM,CAAC,IAAM,UAAU,GAAqE,UAAA,KAAK;IACvF,IAAA,yBAAQ,EAAE,6CAAkB,CAAW;IACzC,IAAA,mCAAuG,EAArG,oDAAuB,EAAE,sDAAwB,EAAE,oCAAkD,CAAC;IAE9G,OAAO,QAAQ,gCAAM,uBAAuB,GAAK,wBAAwB,KAAE,kBAAkB,EAAE,eAAe,IAAG,CAAC;AACpH,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { IRenderComponent } from '../../Utilities';\nimport { IKeytipDataProps } from './KeytipData.types';\nimport { useKeytipData } from './useKeytipData';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { targetElementAttributes, executeElementAttributes, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({ ...targetElementAttributes, ...executeElementAttributes, 'aria-describedby': ariaDescribedBy });\n};\n"]}